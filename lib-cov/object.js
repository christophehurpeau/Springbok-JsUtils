/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['object.js']) {
  _$jscoverage['object.js'] = [];
  _$jscoverage['object.js'][1] = 0;
  _$jscoverage['object.js'][2] = 0;
  _$jscoverage['object.js'][3] = 0;
  _$jscoverage['object.js'][4] = 0;
  _$jscoverage['object.js'][6] = 0;
  _$jscoverage['object.js'][7] = 0;
  _$jscoverage['object.js'][8] = 0;
  _$jscoverage['object.js'][10] = 0;
  _$jscoverage['object.js'][12] = 0;
  _$jscoverage['object.js'][13] = 0;
  _$jscoverage['object.js'][14] = 0;
  _$jscoverage['object.js'][16] = 0;
  _$jscoverage['object.js'][17] = 0;
  _$jscoverage['object.js'][19] = 0;
  _$jscoverage['object.js'][20] = 0;
  _$jscoverage['object.js'][22] = 0;
  _$jscoverage['object.js'][24] = 0;
  _$jscoverage['object.js'][25] = 0;
  _$jscoverage['object.js'][26] = 0;
  _$jscoverage['object.js'][27] = 0;
  _$jscoverage['object.js'][28] = 0;
  _$jscoverage['object.js'][32] = 0;
  _$jscoverage['object.js'][34] = 0;
  _$jscoverage['object.js'][35] = 0;
  _$jscoverage['object.js'][37] = 0;
  _$jscoverage['object.js'][38] = 0;
  _$jscoverage['object.js'][39] = 0;
  _$jscoverage['object.js'][40] = 0;
  _$jscoverage['object.js'][42] = 0;
  _$jscoverage['object.js'][44] = 0;
  _$jscoverage['object.js'][45] = 0;
  _$jscoverage['object.js'][46] = 0;
  _$jscoverage['object.js'][47] = 0;
  _$jscoverage['object.js'][49] = 0;
  _$jscoverage['object.js'][50] = 0;
  _$jscoverage['object.js'][52] = 0;
  _$jscoverage['object.js'][53] = 0;
  _$jscoverage['object.js'][54] = 0;
  _$jscoverage['object.js'][56] = 0;
  _$jscoverage['object.js'][57] = 0;
  _$jscoverage['object.js'][59] = 0;
  _$jscoverage['object.js'][60] = 0;
  _$jscoverage['object.js'][63] = 0;
  _$jscoverage['object.js'][64] = 0;
  _$jscoverage['object.js'][65] = 0;
  _$jscoverage['object.js'][67] = 0;
  _$jscoverage['object.js'][68] = 0;
  _$jscoverage['object.js'][69] = 0;
  _$jscoverage['object.js'][71] = 0;
  _$jscoverage['object.js'][72] = 0;
  _$jscoverage['object.js'][73] = 0;
  _$jscoverage['object.js'][74] = 0;
  _$jscoverage['object.js'][75] = 0;
  _$jscoverage['object.js'][78] = 0;
  _$jscoverage['object.js'][79] = 0;
  _$jscoverage['object.js'][80] = 0;
  _$jscoverage['object.js'][81] = 0;
  _$jscoverage['object.js'][83] = 0;
  _$jscoverage['object.js'][85] = 0;
  _$jscoverage['object.js'][86] = 0;
  _$jscoverage['object.js'][87] = 0;
  _$jscoverage['object.js'][90] = 0;
  _$jscoverage['object.js'][91] = 0;
  _$jscoverage['object.js'][92] = 0;
  _$jscoverage['object.js'][95] = 0;
}
_$jscoverage['object.js'].source = ["\"use strict\";","exports.toMap = function(object) {","  if (object instanceof Map) {","    return object;","  }","  var map = new Map();","  for (var key in object) {","    map.set(key, object[key]);","  }","  return map;","};","exports.extend = function(target) {","  if (typeof target !== 'object') {","    throw new Error('target is not an object');","  }","  var objects = Array.from(arguments).filter(function(value) {","    return !!value;","  });","  if (objects.length === 1) {","    return target;","  }","  return Object.assign.apply(null, objects);","};","exports.union = function(target, object) {","  if (object) {","    for (var key in object) {","      if (target[key] === undefined) {","        target[key] = object[key];","      }","    }","  }","  return target;","};","exports.clone = function(object) {","  return Object.assign({}, object);","};","exports.filterKeys = function(object, keys) {","  var filteredObject = {};","  keys.forEach(function(k) {","    filteredObject[k] = object[k];","  });","  return filteredObject;","};","exports.mapJoin = function(object, separator, callback) {","  if (typeof separator === 'function') {","    callback = separator;","    separator = '';","  }","  object = exports.map(object, callback);","  return object.join(object, separator);","};","var _commonObjectArray = function(propertyName, object, callback, thisArg) {","  if (!thisArg) {","    thisArg = object;","  }","  if (object[propertyName]) {","    throw new Error('call ' + propertyName + ' !');","  }","  return Object.keys(object)[propertyName](function(key) {","    return callback.call(thisArg, object[key], key);","  });","};","exports.filter = function(object, callback, thisArg) {","  var keys = _commonObjectArray.call(null, 'filter', object, callback, thisArg);","  return exports.filterKeys(object, keys);","};","exports.find = function(object, callback, thisArg) {","  var key = this.findIndex.apply(null, arguments);","  return key &amp;&amp; object[key];","};","exports.findIndex = _commonObjectArray.bind(null, 'find');","exports.forEach = _commonObjectArray.bind(null, 'forEach');","exports.join = function(object, separator) {","  return Object.keys(object).map(function(key) {","    return object[key];","  }).join(separator);","};","exports.map = function(object, callback, thisArg) {","  var mappedObject = {};","  exports.forEach(object, function(value, key) {","    mappedObject[key] = callback.apply(this, arguments);","  });","  return mappedObject;","};","exports.reduce = function(object, callback, initialValue) {","  return Object.keys(object).reduce(function(previousValue, currentValue, index, array) {","    return callback(previousValue, currentValue, array[currentValue], object);","  });","};","exports.reduceRight = function(object, callback, initialValue) {","  return Object.keys(object).reduceRight(function(previousValue, currentValue, index, array) {","    return callback(previousValue, currentValue, array[currentValue], object);","  });","};","exports.some = _commonObjectArray.bind(null, 'some');","","//# sourceMappingURL=object.js.map"];
_$jscoverage['object.js'][1]++;
"use strict";
_$jscoverage['object.js'][2]++;
exports.toMap = (function (object) {
  _$jscoverage['object.js'][3]++;
  if ((object instanceof Map)) {
    _$jscoverage['object.js'][4]++;
    return object;
  }
  _$jscoverage['object.js'][6]++;
  var map = new Map();
  _$jscoverage['object.js'][7]++;
  for (var key in object) {
    _$jscoverage['object.js'][8]++;
    map.set(key, object[key]);
}
  _$jscoverage['object.js'][10]++;
  return map;
});
_$jscoverage['object.js'][12]++;
exports.extend = (function (target) {
  _$jscoverage['object.js'][13]++;
  if (((typeof target) !== "object")) {
    _$jscoverage['object.js'][14]++;
    throw new Error("target is not an object");
  }
  _$jscoverage['object.js'][16]++;
  var objects = Array.from(arguments).filter((function (value) {
  _$jscoverage['object.js'][17]++;
  return (! (! value));
}));
  _$jscoverage['object.js'][19]++;
  if ((objects.length === 1)) {
    _$jscoverage['object.js'][20]++;
    return target;
  }
  _$jscoverage['object.js'][22]++;
  return Object.assign.apply(null, objects);
});
_$jscoverage['object.js'][24]++;
exports.union = (function (target, object) {
  _$jscoverage['object.js'][25]++;
  if (object) {
    _$jscoverage['object.js'][26]++;
    for (var key in object) {
      _$jscoverage['object.js'][27]++;
      if ((target[key] === undefined)) {
        _$jscoverage['object.js'][28]++;
        target[key] = object[key];
      }
}
  }
  _$jscoverage['object.js'][32]++;
  return target;
});
_$jscoverage['object.js'][34]++;
exports.clone = (function (object) {
  _$jscoverage['object.js'][35]++;
  return Object.assign({}, object);
});
_$jscoverage['object.js'][37]++;
exports.filterKeys = (function (object, keys) {
  _$jscoverage['object.js'][38]++;
  var filteredObject = {};
  _$jscoverage['object.js'][39]++;
  keys.forEach((function (k) {
  _$jscoverage['object.js'][40]++;
  filteredObject[k] = object[k];
}));
  _$jscoverage['object.js'][42]++;
  return filteredObject;
});
_$jscoverage['object.js'][44]++;
exports.mapJoin = (function (object, separator, callback) {
  _$jscoverage['object.js'][45]++;
  if (((typeof separator) === "function")) {
    _$jscoverage['object.js'][46]++;
    callback = separator;
    _$jscoverage['object.js'][47]++;
    separator = "";
  }
  _$jscoverage['object.js'][49]++;
  object = exports.map(object, callback);
  _$jscoverage['object.js'][50]++;
  return object.join(object, separator);
});
_$jscoverage['object.js'][52]++;
var _commonObjectArray = (function (propertyName, object, callback, thisArg) {
  _$jscoverage['object.js'][53]++;
  if ((! thisArg)) {
    _$jscoverage['object.js'][54]++;
    thisArg = object;
  }
  _$jscoverage['object.js'][56]++;
  if (object[propertyName]) {
    _$jscoverage['object.js'][57]++;
    throw new Error(("call " + propertyName + " !"));
  }
  _$jscoverage['object.js'][59]++;
  return (Object.keys(object)[propertyName])((function (key) {
  _$jscoverage['object.js'][60]++;
  return callback.call(thisArg, object[key], key);
}));
});
_$jscoverage['object.js'][63]++;
exports.filter = (function (object, callback, thisArg) {
  _$jscoverage['object.js'][64]++;
  var keys = _commonObjectArray.call(null, "filter", object, callback, thisArg);
  _$jscoverage['object.js'][65]++;
  return exports.filterKeys(object, keys);
});
_$jscoverage['object.js'][67]++;
exports.find = (function (object, callback, thisArg) {
  _$jscoverage['object.js'][68]++;
  var key = this.findIndex.apply(null, arguments);
  _$jscoverage['object.js'][69]++;
  return (key && object[key]);
});
_$jscoverage['object.js'][71]++;
exports.findIndex = _commonObjectArray.bind(null, "find");
_$jscoverage['object.js'][72]++;
exports.forEach = _commonObjectArray.bind(null, "forEach");
_$jscoverage['object.js'][73]++;
exports.join = (function (object, separator) {
  _$jscoverage['object.js'][74]++;
  return Object.keys(object).map((function (key) {
  _$jscoverage['object.js'][75]++;
  return object[key];
})).join(separator);
});
_$jscoverage['object.js'][78]++;
exports.map = (function (object, callback, thisArg) {
  _$jscoverage['object.js'][79]++;
  var mappedObject = {};
  _$jscoverage['object.js'][80]++;
  exports.forEach(object, (function (value, key) {
  _$jscoverage['object.js'][81]++;
  mappedObject[key] = callback.apply(this, arguments);
}));
  _$jscoverage['object.js'][83]++;
  return mappedObject;
});
_$jscoverage['object.js'][85]++;
exports.reduce = (function (object, callback, initialValue) {
  _$jscoverage['object.js'][86]++;
  return Object.keys(object).reduce((function (previousValue, currentValue, index, array) {
  _$jscoverage['object.js'][87]++;
  return callback(previousValue, currentValue, array[currentValue], object);
}));
});
_$jscoverage['object.js'][90]++;
exports.reduceRight = (function (object, callback, initialValue) {
  _$jscoverage['object.js'][91]++;
  return Object.keys(object).reduceRight((function (previousValue, currentValue, index, array) {
  _$jscoverage['object.js'][92]++;
  return callback(previousValue, currentValue, array[currentValue], object);
}));
});
_$jscoverage['object.js'][95]++;
exports.some = _commonObjectArray.bind(null, "some");
