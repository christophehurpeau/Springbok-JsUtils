/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['index.js']) {
  _$jscoverage['index.js'] = [];
  _$jscoverage['index.js'][1] = 0;
  _$jscoverage['index.js'][2] = 0;
  _$jscoverage['index.js'][4] = 0;
  _$jscoverage['index.js'][7] = 0;
  _$jscoverage['index.js'][10] = 0;
  _$jscoverage['index.js'][13] = 0;
  _$jscoverage['index.js'][17] = 0;
  _$jscoverage['index.js'][20] = 0;
  _$jscoverage['index.js'][23] = 0;
  _$jscoverage['index.js'][26] = 0;
  _$jscoverage['index.js'][27] = 0;
  _$jscoverage['index.js'][28] = 0;
  _$jscoverage['index.js'][29] = 0;
  _$jscoverage['index.js'][30] = 0;
  _$jscoverage['index.js'][31] = 0;
  _$jscoverage['index.js'][32] = 0;
  _$jscoverage['index.js'][33] = 0;
  _$jscoverage['index.js'][35] = 0;
  _$jscoverage['index.js'][38] = 0;
  _$jscoverage['index.js'][39] = 0;
  _$jscoverage['index.js'][40] = 0;
  _$jscoverage['index.js'][42] = 0;
  _$jscoverage['index.js'][43] = 0;
  _$jscoverage['index.js'][44] = 0;
  _$jscoverage['index.js'][46] = 0;
  _$jscoverage['index.js'][48] = 0;
  _$jscoverage['index.js'][49] = 0;
}
_$jscoverage['index.js'].source = ["\"use strict\";","var utils = {","  toInt: function(arg) {","    return parseInt(arg, 10);","  },","  isString: function(arg) {","    return typeof arg === 'string';","  },","  isObject: function(arg) {","    return typeof arg === 'object';","  },","  isFunction: function(arg) {","    return typeof arg === 'function';","  },","  isArray: Array.isArray,","  escape: function(html) {","    return String(html).replace(/&amp;(?!\\w+;)/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').replace(/\"/g, '&amp;quot;');","  },","  escapeUrl: function(html) {","    return html.replace(/&amp;/g, '&amp;amp;');","  },","  regexpEscape: function(s) {","    return s.replace(/([\\^\\$\\(\\)\\[\\]\\{\\}\\*\\.\\+\\?\\|\\\\])/gi, \"\\\\$1\");","  }","};","module.exports = utils;","'filter find findIndex forEach join map reduce reduceRight some'.split(' ').forEach(function(methodName) {","  utils[methodName] = function(arrayOrObject) {","    var args = Array.prototype.slice.call(arguments, 1);","    var method = arrayOrObject[methodName];","    if (!method) {","      method = utils.object[methodName];","      args.unshift(arrayOrObject);","    }","    return method.apply(arrayOrObject, args);","  };","});","utils.mapToArray = function(arrayOrObject, callback) {","  if (Array.isArray(arrayOrObject)) {","    return arrayOrObject.map(callback);","  }","  var array = [];","  utils.forEach(arrayOrObject, function(value, index) {","    array.push(callback(value, index));","  });","  return array;","};","utils.array = require('./array.js');","utils.object = require('./object.js');","","//# sourceMappingURL=index.js.map"];
_$jscoverage['index.js'][1]++;
"use strict";
_$jscoverage['index.js'][2]++;
var utils = {toInt: (function (arg) {
  _$jscoverage['index.js'][4]++;
  return parseInt(arg, 10);
}), isString: (function (arg) {
  _$jscoverage['index.js'][7]++;
  return ((typeof arg) === "string");
}), isObject: (function (arg) {
  _$jscoverage['index.js'][10]++;
  return ((typeof arg) === "object");
}), isFunction: (function (arg) {
  _$jscoverage['index.js'][13]++;
  return ((typeof arg) === "function");
}), isArray: Array.isArray, escape: (function (html) {
  _$jscoverage['index.js'][17]++;
  return String(html).replace(/&(?!\w+;)/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
}), escapeUrl: (function (html) {
  _$jscoverage['index.js'][20]++;
  return html.replace(/&/g, "&amp;");
}), regexpEscape: (function (s) {
  _$jscoverage['index.js'][23]++;
  return s.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1");
})};
_$jscoverage['index.js'][26]++;
module.exports = utils;
_$jscoverage['index.js'][27]++;
"filter find findIndex forEach join map reduce reduceRight some".split(" ").forEach((function (methodName) {
  _$jscoverage['index.js'][28]++;
  utils[methodName] = (function (arrayOrObject) {
  _$jscoverage['index.js'][29]++;
  var args = Array.prototype.slice.call(arguments, 1);
  _$jscoverage['index.js'][30]++;
  var method = arrayOrObject[methodName];
  _$jscoverage['index.js'][31]++;
  if ((! method)) {
    _$jscoverage['index.js'][32]++;
    method = utils.object[methodName];
    _$jscoverage['index.js'][33]++;
    args.unshift(arrayOrObject);
  }
  _$jscoverage['index.js'][35]++;
  return method.apply(arrayOrObject, args);
});
}));
_$jscoverage['index.js'][38]++;
utils.mapToArray = (function (arrayOrObject, callback) {
  _$jscoverage['index.js'][39]++;
  if (Array.isArray(arrayOrObject)) {
    _$jscoverage['index.js'][40]++;
    return arrayOrObject.map(callback);
  }
  _$jscoverage['index.js'][42]++;
  var array = [];
  _$jscoverage['index.js'][43]++;
  utils.forEach(arrayOrObject, (function (value, index) {
  _$jscoverage['index.js'][44]++;
  array.push(callback(value, index));
}));
  _$jscoverage['index.js'][46]++;
  return array;
});
_$jscoverage['index.js'][48]++;
utils.array = require("./array.js");
_$jscoverage['index.js'][49]++;
utils.object = require("./object.js");
