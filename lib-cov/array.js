/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['array.js']) {
  _$jscoverage['array.js'] = [];
  _$jscoverage['array.js'][1] = 0;
  _$jscoverage['array.js'][2] = 0;
  _$jscoverage['array.js'][3] = 0;
  _$jscoverage['array.js'][5] = 0;
  _$jscoverage['array.js'][6] = 0;
  _$jscoverage['array.js'][8] = 0;
  _$jscoverage['array.js'][9] = 0;
  _$jscoverage['array.js'][11] = 0;
  _$jscoverage['array.js'][12] = 0;
  _$jscoverage['array.js'][15] = 0;
  _$jscoverage['array.js'][17] = 0;
  _$jscoverage['array.js'][18] = 0;
  _$jscoverage['array.js'][19] = 0;
  _$jscoverage['array.js'][20] = 0;
  _$jscoverage['array.js'][22] = 0;
  _$jscoverage['array.js'][23] = 0;
  _$jscoverage['array.js'][25] = 0;
  _$jscoverage['array.js'][26] = 0;
  _$jscoverage['array.js'][28] = 0;
  _$jscoverage['array.js'][29] = 0;
  _$jscoverage['array.js'][31] = 0;
  _$jscoverage['array.js'][32] = 0;
  _$jscoverage['array.js'][34] = 0;
  _$jscoverage['array.js'][36] = 0;
  _$jscoverage['array.js'][37] = 0;
  _$jscoverage['array.js'][39] = 0;
  _$jscoverage['array.js'][40] = 0;
  _$jscoverage['array.js'][42] = 0;
  _$jscoverage['array.js'][45] = 0;
  _$jscoverage['array.js'][48] = 0;
  _$jscoverage['array.js'][51] = 0;
  _$jscoverage['array.js'][52] = 0;
  _$jscoverage['array.js'][53] = 0;
  _$jscoverage['array.js'][54] = 0;
  _$jscoverage['array.js'][55] = 0;
  _$jscoverage['array.js'][57] = 0;
  _$jscoverage['array.js'][58] = 0;
  _$jscoverage['array.js'][60] = 0;
  _$jscoverage['array.js'][61] = 0;
  _$jscoverage['array.js'][63] = 0;
  _$jscoverage['array.js'][66] = 0;
  _$jscoverage['array.js'][67] = 0;
  _$jscoverage['array.js'][68] = 0;
  _$jscoverage['array.js'][69] = 0;
  _$jscoverage['array.js'][72] = 0;
  _$jscoverage['array.js'][74] = 0;
  _$jscoverage['array.js'][75] = 0;
  _$jscoverage['array.js'][76] = 0;
  _$jscoverage['array.js'][77] = 0;
  _$jscoverage['array.js'][79] = 0;
  _$jscoverage['array.js'][80] = 0;
  _$jscoverage['array.js'][81] = 0;
  _$jscoverage['array.js'][84] = 0;
}
_$jscoverage['array.js'].source = ["\"use strict\";","exports.slice1 = function(array) {","  return Array.prototype.slice.call(array, 1);","};","exports.has = function(array, searchElement, i) {","  return Array.prototype.indexOf.call(array, searchElement, i) !== -1;","};","exports.hasAmong = function(array, searchElements, i) {","  for (var j = 0,","      l = searchElements.length; j &lt; l; j++) {","    if (Array.prototype.indexOf.call(array, searchElements[j], i) !== -1) {","      return true;","    }","  }","  return false;","};","exports.remove = function(array, element) {","  var index = array.indexOf(element);","  if (index === -1) {","    return false;","  }","  array.splice(index, 1);","  return index;","};","exports.clone = function(array) {","  return array.slice(0);","};","exports.last = function(array) {","  return array[array.length - 1];","};","exports.random = function(array) {","  return array[Math.floor(Math.random() * array.length)];","};","exports.sortFunctions = {","  '': function(a, b) {","    if (a &lt; b) {","      return -1;","    }","    if (a &gt; b) {","      return 1;","    }","    return 0;","  },","  number: function(a, b) {","    return a - b;","  },","  string: function(a, b) {","    return a.localeCompare(b);","  }","};","exports.sortF = exports.sortFunctions;","exports.sortBy = function(array, propertyName, descending, sortFunction) {","  if (typeof descending === 'string' || typeof descending === 'function') {","    sortFunction = descending;","    descending = undefined;","  }","  if (typeof sortFunction !== 'function') {","    sortFunction = exports.sortFunctions[sortFunction == null ? '' : sortFunction];","  }","  return array.sort(descending ? function(b, a) {","    return sortFunction(a[propertyName], b[propertyName]);","  } : function(a, b) {","    return sortFunction(a[propertyName], b[propertyName]);","  });","};","exports.removeWhen = function(array, callback) {","  array.forEach(function(elt, index) {","    if (callback(elt, index)) {","      array.splice(index, 1);","    }","  });","  return array.length;","};","exports.equals = function(array1, array2) {","  var length = array1.length;","  if (!Array.isArray(array1) || !Array.isArray(array2) || length != array2.length) {","    return false;","  }","  for (var i = 0; i &lt; length; i++) {","    if (array1[i] !== array2[i]) {","      return false;","    }","  }","  return true;","};","","//# sourceMappingURL=array.js.map"];
_$jscoverage['array.js'][1]++;
"use strict";
_$jscoverage['array.js'][2]++;
exports.slice1 = (function (array) {
  _$jscoverage['array.js'][3]++;
  return Array.prototype.slice.call(array, 1);
});
_$jscoverage['array.js'][5]++;
exports.has = (function (array, searchElement, i) {
  _$jscoverage['array.js'][6]++;
  return (Array.prototype.indexOf.call(array, searchElement, i) !== -1);
});
_$jscoverage['array.js'][8]++;
exports.hasAmong = (function (array, searchElements, i) {
  _$jscoverage['array.js'][9]++;
  for (var j = 0, l = searchElements.length; (j < l); (j++)) {
    _$jscoverage['array.js'][11]++;
    if ((Array.prototype.indexOf.call(array, searchElements[j], i) !== -1)) {
      _$jscoverage['array.js'][12]++;
      return true;
    }
}
  _$jscoverage['array.js'][15]++;
  return false;
});
_$jscoverage['array.js'][17]++;
exports.remove = (function (array, element) {
  _$jscoverage['array.js'][18]++;
  var index = array.indexOf(element);
  _$jscoverage['array.js'][19]++;
  if ((index === -1)) {
    _$jscoverage['array.js'][20]++;
    return false;
  }
  _$jscoverage['array.js'][22]++;
  array.splice(index, 1);
  _$jscoverage['array.js'][23]++;
  return index;
});
_$jscoverage['array.js'][25]++;
exports.clone = (function (array) {
  _$jscoverage['array.js'][26]++;
  return array.slice(0);
});
_$jscoverage['array.js'][28]++;
exports.last = (function (array) {
  _$jscoverage['array.js'][29]++;
  return array[(array.length - 1)];
});
_$jscoverage['array.js'][31]++;
exports.random = (function (array) {
  _$jscoverage['array.js'][32]++;
  return array[Math.floor((Math.random() * array.length))];
});
_$jscoverage['array.js'][34]++;
exports.sortFunctions = {"": (function (a, b) {
  _$jscoverage['array.js'][36]++;
  if ((a < b)) {
    _$jscoverage['array.js'][37]++;
    return -1;
  }
  _$jscoverage['array.js'][39]++;
  if ((a > b)) {
    _$jscoverage['array.js'][40]++;
    return 1;
  }
  _$jscoverage['array.js'][42]++;
  return 0;
}), number: (function (a, b) {
  _$jscoverage['array.js'][45]++;
  return (a - b);
}), string: (function (a, b) {
  _$jscoverage['array.js'][48]++;
  return a.localeCompare(b);
})};
_$jscoverage['array.js'][51]++;
exports.sortF = exports.sortFunctions;
_$jscoverage['array.js'][52]++;
exports.sortBy = (function (array, propertyName, descending, sortFunction) {
  _$jscoverage['array.js'][53]++;
  if ((((typeof descending) === "string") || ((typeof descending) === "function"))) {
    _$jscoverage['array.js'][54]++;
    sortFunction = descending;
    _$jscoverage['array.js'][55]++;
    descending = undefined;
  }
  _$jscoverage['array.js'][57]++;
  if (((typeof sortFunction) !== "function")) {
    _$jscoverage['array.js'][58]++;
    sortFunction = exports.sortFunctions[((sortFunction == null)? "": sortFunction)];
  }
  _$jscoverage['array.js'][60]++;
  return array.sort((descending? (function (b, a) {
  _$jscoverage['array.js'][61]++;
  return sortFunction(a[propertyName], b[propertyName]);
}): (function (a, b) {
  _$jscoverage['array.js'][63]++;
  return sortFunction(a[propertyName], b[propertyName]);
})));
});
_$jscoverage['array.js'][66]++;
exports.removeWhen = (function (array, callback) {
  _$jscoverage['array.js'][67]++;
  array.forEach((function (elt, index) {
  _$jscoverage['array.js'][68]++;
  if (callback(elt, index)) {
    _$jscoverage['array.js'][69]++;
    array.splice(index, 1);
  }
}));
  _$jscoverage['array.js'][72]++;
  return array.length;
});
_$jscoverage['array.js'][74]++;
exports.equals = (function (array1, array2) {
  _$jscoverage['array.js'][75]++;
  var length = array1.length;
  _$jscoverage['array.js'][76]++;
  if (((! Array.isArray(array1)) || (! Array.isArray(array2)) || (length != array2.length))) {
    _$jscoverage['array.js'][77]++;
    return false;
  }
  _$jscoverage['array.js'][79]++;
  for (var i = 0; (i < length); (i++)) {
    _$jscoverage['array.js'][80]++;
    if ((array1[i] !== array2[i])) {
      _$jscoverage['array.js'][81]++;
      return false;
    }
}
  _$jscoverage['array.js'][84]++;
  return true;
});
